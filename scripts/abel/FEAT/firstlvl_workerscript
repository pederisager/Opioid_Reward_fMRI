#!/bin/bash

##Notes
### Notes:
#
#This is a job script for Abel. Hashtagged lines starting with SBATCH are not commented out - they are instructions to the computer cluster. 
# 
#This is a general script recipe. To run for your desired data, edit every section enclosed in <> to something relevant for your analysis. This includes <> enclosed sections in comments.


######################################################

#This section contains settings for the Abel cluster. You can check their functions by searching in the Abel userguide, or by going to the Abel homepage on UiO's webpages.
# These setting-commands will only run if they are executed in the very beginning of the script.

#SBATCH --account=uio
#SBATCH --time=2:0:0
#SBATCH --mem-per-cpu=2G
#SBATCH --qos=lowpri
#SBATCH --output=<name_of_your_analysis>%j
#SBATCH --error=<name_of_your_analysis>_error%j


######################################################

#This section sets up the Abel environment so that your job can run.


source /cluster/bin/jobsetup	#Sets up the variables that Abel needs to function. 

module purge	# clear any inherited modules
set -o errexit	# exit on errors

module load fsl/5.0.9	#Will load FSL version 5.0.9 in ABEL. You can change version by editing /5.0.9 (check available modules by typing module avail in a terminal connected to Abel).

source $FSLDIR/etc/fslconf/fsl.sh	#Sets up the variables that FSL needs to function. 


######################################################

#This section sets your data up for analysis in the Abel SCRATCH directory.
#WARNING: In order for this code to run you must in your design.fsf file
	#change the paths to data to SCRATCH/<name_of_data_file>. These usually include the fmri image, the structural image, and the EV file. 
	#change the desired output path to OUTFILE
#The reason for this is that your design.fsf is run in the SCRATCH directory, and needs to call all the data from there. Ctrl+H (find and replace) is a nice way to change multiple instances of a text string. 
#Take care that the $TASK_ID variable is used correctly. It should be used to identify all the relevant data for each feat you want to run. 

DATASET="</absoulute/path/to/$TASK_ID/data1.file /absoulute/path/to/$TASK_ID/data2.file /absolute/path/to/design.fsf>"	#Substitute example lines for the path(s) to your data, and to the design.fsf you would like to run. All the file paths in $DATASET will be copied to SCRATCH.

OUTFILE=$SCRATCH/$TASK_ID.feat	#Denotes what will be copied back from SCRATCH once the analysis is done, or an error occurs. 

cp $DATASET $SCRATCH	#Copies data to SCRATCH
cd $SCRATCH		#Changes working directory to SCRATCH
chkfile $OUTFILE	#Decides what will be copied back once job is completed


sed -ie "s|OUTFILE|${OUTFILE}|g" firstFEAT.fsf #Replace "OUTFILE" with the path of the actual OUTFILE directory inside your design.fsf. 
sed -ie "s|SCRATCH|${SCRATCH}|g" firstFEAT.fsf #Replace "SCRATCH" with the path of the actual SCRATCH directory inside your design.fsf. 

######################################################

#Finally, you can run your desired design script:

feat firstFEAT.fsf
